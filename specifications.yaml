patchYAML: #keyword:
    Example: |
        build/A.json :base.json: |
            |@@ -1,5 +1,5 @@
            | {
            |-    "ID": "A123456",
            |+    "ID": "A000001",
            |     "email": "a@example.com",
            |     "Name": "A"
            | }
        build/B.json :base.json: |
            |@@ -1,5 +1,6 @@
            | {
            |     "ID": "A123456",
            |-    "email": "a@example.com",
            |-    "Name": "A"
            |+    "email": "b@example.com",
            |+    "Name": "B"
            |+    // dummy file date.json    2022-01-01 11:22:33.900000000 +0900
            | }"
pathPairLines: #keyword:
    Example: |
        build/A.json :base.json: |
        build/B.json :base.json: |
SortPathPairLines: #keyword:
    Algorithm:
        Idea 1 example:  #// OK
            replace steps:
                1: |  #// paths          sed                   # point
                    a :b: |:1234  *  ... ':a: |:1234'  => 123
                    b :c: |:1234     ... ':b: |:1234'  => 123  # same level is matched
                    b :d: |:1234
                    c :e: |:1234
                    f :g: |:1234
                    d :f: |:1234
                2: |
                    a :b: |:123   +
                    b :c: |:1234  *
                    b :d: |:1234    ... ':b: |:1234'  => 123
                    c :e: |:1234    ... ':c: |:1234'  => 123
                    f :g: |:1234
                    d :f: |:1234
                3: |
                    a :b: |:123
                    b :c: |:1234
                    b :d: |:1234
                    c :e: |:1234
                    f :g: |:1234    ... ':f: |:1234'  => 123
                    d :f: |:1234  *
                4: |
                    a :b: |:123
                    b :c: |:1234
                    b :d: |:1234  *
                    c :e: |:1234
                    f :g: |:1234
                    d :f: |:123   +  ... ':d: |:123'  => 12  # deeper level is matched
                5: |
                    a :b: |:123      ... ':a: |:123'  => 12
                    b :c: |:1234     ... ':b: |:1234' => 123
                    b :d: |:12    +  ... ':b: |:12c   => 1
                    c :e: |:1234
                    f :g: |:1234
                    d :f: |:123
                6: |
                    a :b: |:1     +
                    b :c: |:1234  *
                    b :d: |:12
                    c :e: |:1234   ... ':c: |:1234'  => 123
                    f :g: |:1234
                    d :f: |:123
                7: |
                    a :b: |:1
                    b :c: |:123   +
                    b :d: |:12
                    c :e: |:1234 
                    f :g: |:1234   ... ':f: |:1234'  => 123  # shallower level is not matched
                    d :f: |:123    ... ':d: |:123'   => 12
            sorted: |
                c :e: |:1234
                f :g: |:1234
                b :c: |:123
                d :f: |:123
                b :d: |:12
                a :b: |:1
            order:
                full: e, g
                patch: c, f, b, d, b, a
        Idea 2 example:  #// NG
            replace steps:
                1: |
                    a :b: |:1$  *  ... ":a:" 1$ => 12$
                    b :c: |:1$     ... ":b:" 1$ => 12$
                    b :d: |:1$
                    c :e: |:1$
                2: |
                    a :b: |:12$  +
                    b :c: |:1$   *
                    b :d: |:1$     ... ":b:" 1$ => 12$
                    c :e: |:1$     ... ":c:" 1$ => 12$
                3: |
                    a :b: |:12$
                    b :c: |:12$  +
                    b :d: |:1$
                    c :e: |:1$
                    f :g: |:1$   ... ":f:" 1$ => 12$
                    d :f: |:1$   *
                4: |
                    a :b: |:12$
                    b :c: |:12$
                    b :d: |:1$   ?
                    c :e: |:1$
                    f :g: |:1$
                    d :f: |:12$  +  ... ":d:" 12$ => 123$
Error messages: #keyword: patch-o error messages
    patch-o message:
        Based on patch original message
    patch original message:
        success case: |
            patching file __AttachedFilePath__ (read from __BaseFilePath__)
        failed case: |  #// All text output to stdout not stderr
            patching file __AttachedFilePath__ (read from __BaseFilePath__)
            Hunk #1 FAILED at 1.
            1 out of 1 hunk FAILED -- saving rejects to file __AttachedFilePath__.rej
            ERROR
